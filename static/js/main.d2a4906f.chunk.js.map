{"version":3,"sources":["components/container/Container.module.css","components/container/Container.js","service/phonebooks-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebooks-selectors.js","redux/phonebook/phonebook-actions.js","components/phonebook/ContactList.js","components/phonebook/ContactForm.js","components/phonebook/Filter.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/srore.js","index.js","components/phonebook/Contacts.module.css"],"names":["module","exports","Container","children","className","s","container","fetchContacts","a","axios","get","data","addContacts","phoneList","post","deleteContacts","id","delete","defaults","baseURL","fetchPhonebooks","createAsyncThunk","_","rejectWithValue","phonebooksAPI","contacts","getContacts","state","entities","getFilter","filter","getLoading","loading","getError","error","getVisiblePhonbookList","createSelector","items","normolizedFilter","toLowerCase","item","name","includes","changeFilter","createAction","ContactList","useSelector","phonebookSelector","dispatch","useDispatch","useEffect","phonebookOperations","length","map","number","type","onClick","onDeleteContact","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","label","input","form","button","buttonActive","onSubmit","preventDefault","addSameName","addSameNumber","toast","phonebooksOperations","pattern","title","required","onChange","placeholder","disabled","Filter","phonebookActions","target","App","autoClose","createReducer","fulfilled","payload","isLoading","pending","rejected","phonebookReduser","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2a4906f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1oNgl\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContacts(phoneList) {\r\n  const { data } = await axios.post('/contacts', phoneList);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as phonebooksAPI from 'service/phonebooks-api';\r\n\r\nexport const fetchPhonebooks = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await phonebooksAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async (phoneList, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await phonebooksAPI.addContacts(phoneList);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await phonebooksAPI.deleteContacts(id);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.entities;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getVisiblePhonbookList = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    const normolizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normolizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookOperations, phonebookSelector } from 'redux/phonebook';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(phonebookSelector.getVisiblePhonbookList);\r\n  const loading = useSelector(phonebookSelector.getLoading);\r\n  const error = useSelector(phonebookSelector.getError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(phonebookOperations.fetchPhonebooks());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = id =>\r\n    dispatch(phonebookOperations.deleteContacts(id));\r\n\r\n  const { item } = s;\r\n\r\n  return (\r\n    <ul>\r\n      {error && <h2>{error}</h2>}\r\n      {contacts.length > 0 &&\r\n        !error &&\r\n        !loading &&\r\n        contacts.map(({ id, name, number }) => (\r\n          <li className={item} key={id}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n\r\n      {loading && <h2>Loading...</h2>}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport * as phonebooksOperations from 'redux/phonebook/phonebook-operations';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => state.contacts.entities);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const addSameName = contacts.map(({ name }) => name).includes(name);\r\n    const addSameNumber = contacts.map(({ number }) => number).includes(number);\r\n\r\n    if (addSameName) {\r\n      toast.error(`${name} is already in contacts`);\r\n    } else if (addSameNumber) {\r\n      toast.error(`${number} is already in contacts`);\r\n    } else {\r\n      const phoneList = { name, number };\r\n      dispatch(phonebooksOperations.addContacts(phoneList));\r\n    }\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const { label, input, form, button } = s;\r\n  const buttonActive = name.length > 0 && number.length > 0;\r\n\r\n  return (\r\n    <form className={form} onSubmit={handleSubmit}>\r\n      <label className={label}>\r\n        Name\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <label className={label}>\r\n        Number\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <button className={button} type=\"submit\" disabled={!buttonActive}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport { phonebookActions, phonebookSelector } from 'redux/phonebook';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(phonebookSelector.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e =>\r\n    dispatch(phonebookActions.changeFilter(e.target.value));\r\n\r\n  const { label, input } = s;\r\n\r\n  return (\r\n    <label className={label}>\r\n      Filter contacts by name\r\n      <input\r\n        className={input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\" \"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Container from './container/Container';\r\nimport ContactList from './phonebook/ContactList';\r\nimport ContactForm from './phonebook/ContactForm';\r\nimport Filter from './phonebook/Filter';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n\r\n      <ToastContainer autoClose={3000} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchPhonebooks,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './phonebook-operations';\r\nimport * as phonebookActions from './phonebook-actions';\r\n\r\nconst entities = createReducer([], {\r\n  [fetchPhonebooks.fulfilled]: (_, { payload }) => payload,\r\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchPhonebooks.pending]: () => true,\r\n  [fetchPhonebooks.fulfilled]: () => false,\r\n  [fetchPhonebooks.rejected]: () => false,\r\n\r\n  [addContacts.pending]: () => true,\r\n  [addContacts.fulfilled]: () => false,\r\n  [addContacts.rejected]: () => false,\r\n\r\n  [deleteContacts.pending]: () => true,\r\n  [deleteContacts.fulfilled]: () => false,\r\n  [deleteContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchPhonebooks.rejected]: (_, { payload }) => payload,\r\n  [fetchPhonebooks.pending]: () => null,\r\n\r\n  [addContacts.rejected]: (_, { payload }) => payload,\r\n  [addContacts.pending]: () => null,\r\n\r\n  [deleteContacts.rejected]: (_, { payload }) => payload,\r\n  [deleteContacts.pending]: () => null,\r\n});\r\n\r\nconst phonebookReduser = combineReducers({\r\n  entities,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n\r\nexport default phonebookReduser;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n//import logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport phonebookReduser from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  //logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReduser,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport store from './redux/srore';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__L67YR\",\"label\":\"Contacts_label__24N2n\",\"input\":\"Contacts_input__1_JSS\",\"button\":\"Contacts_button__1qHoX\",\"item\":\"Contacts_item__gGuEN\"};"],"sourceRoot":""}